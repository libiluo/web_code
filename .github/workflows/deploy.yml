name: Deploy to Server

on:
  push:
    branches: [main] # 如果你的主分支是 master，改成 master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🔧 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: 📦 安装依赖
        run: npm ci

      - name: 🏗️ 构建项目
        run: npm run build

      - name: 📝 创建部署包
        run: |
          cd dist
          tar -czf ../deploy.tar.gz .
          cd ..

      - name: 📤 上传到服务器
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "deploy.tar.gz"
          target: "/home/deployer/"

      - name: 🚀 解压并部署
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/deployer
            # 先备份(可选)
            # sudo cp -r /var/www/myapp /var/www/myapp.backup.$(date +%Y%m%d_%H%M%S)
            # 清理旧文件
            sudo rm -rf /var/www/myapp/*
            sudo rm -rf /var/www/myapp/.[!.]*
            # 解压新文件
            tar -xzf deploy.tar.gz -C /var/www/myapp/
            rm deploy.tar.gz
            # 设置权限
            sudo chown -R www-data:www-data /var/www/myapp
            sudo chmod -R 755 /var/www/myapp
            echo "✅ 部署完成！"
